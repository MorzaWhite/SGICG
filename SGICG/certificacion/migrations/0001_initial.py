# Generated by Django 5.2.1 on 2025-08-08 01:01

import certificacion.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_item', models.PositiveIntegerField()),
                ('fecha_limite_etapa', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('tipo_certificado', models.CharField(choices=[('GC_SENCILLA', 'GC Sencilla'), ('GC_COMPLETA', 'GC Completa'), ('ESCRITO', 'Escrito'), ('DIAMANTE', 'Diamante')], default='GC_SENCILLA', max_length=15)),
                ('que_es', models.CharField(choices=[('JOYA', 'Joya'), ('LOTE', 'Lote de Gemas'), ('PIEDRA', 'Piedra(s) Suelta(s)'), ('VERBAL_A_GC', 'Verbal a GC'), ('REIMPRESION', 'Reimpresión')], default='JOYA', max_length=15)),
                ('codigo_referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo_joya', models.CharField(blank=True, choices=[('ANILLO', 'Anillo'), ('DIJE', 'Dije'), ('TOPOS', 'Topos'), ('PULSERA', 'Pulsera'), ('PULSERA_TENIS', 'Pulsera Tenis'), ('SET', 'Set')], max_length=15, null=True)),
                ('metal', models.CharField(blank=True, choices=[('ORO', 'Oro'), ('ORO_AMARILLO', 'Oro Amarillo'), ('ORO_ROSA', 'Oro Rosa'), ('PLATA', 'Plata'), ('BLANCO', 'Blanco'), ('ROSA', 'Rosa'), ('NEGRO', 'Negro')], max_length=15, null=True)),
                ('cantidad_gemas', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('componentes_set', models.CharField(blank=True, max_length=255, null=True)),
                ('gema_principal', models.CharField(blank=True, max_length=100, null=True)),
                ('forma_gema', models.CharField(default='Ninguno', max_length=100)),
                ('peso_gema', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('comentarios', models.TextField(blank=True, null=True)),
                ('nombre_excel', models.CharField(blank=True, max_length=255, null=True)),
                ('qr_cargado', models.ImageField(blank=True, null=True, upload_to=certificacion.models.get_qr_upload_path)),
            ],
            options={
                'ordering': ['numero_item'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionTiempos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_item', models.CharField(choices=[('PIEDRA', 'Piedra(s) Suelta(s)'), ('JOYA', 'Joya (General)'), ('SET', 'Set de Joyas'), ('LOTE', 'Lote de Gemas')], max_length=10)),
                ('tipo_certificado', models.CharField(choices=[('GC_SENCILLA', 'GC Sencilla'), ('GC_COMPLETA', 'GC Completa'), ('ESCRITO', 'Escrito'), ('DIAMANTE', 'Diamante')], max_length=15)),
                ('tiempo_ingreso', models.PositiveIntegerField(blank=True, help_text='Tiempo en segundos', null=True)),
                ('tiempo_fotografia', models.PositiveIntegerField(blank=True, help_text='Tiempo en segundos', null=True)),
                ('tiempo_revision', models.PositiveIntegerField(blank=True, help_text='Tiempo en segundos', null=True)),
                ('tiempo_impresion', models.PositiveIntegerField(blank=True, help_text='Tiempo en segundos', null=True)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuración de Tiempo',
                'verbose_name_plural': 'Configuraciones de Tiempos',
                'ordering': ['tipo_item', 'tipo_certificado'],
                'unique_together': {('tipo_item', 'tipo_certificado')},
            },
        ),
        migrations.CreateModel(
            name='FotoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(upload_to=certificacion.models.get_foto_upload_path)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotos', to='certificacion.item')),
            ],
            options={
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='Orden',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_orden_facturacion', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Número de Orden (Facturación)')),
                ('estado_actual', models.CharField(choices=[('INGRESO', 'Ingreso'), ('FOTOGRAFIA', 'Fotografía'), ('REVISION', 'Revisión'), ('IMPRESION', 'Impresión'), ('FINALIZADA', 'Finalizada')], db_index=True, default='INGRESO', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['estado_actual', 'fecha_creacion'], name='certificaci_estado__12979a_idx')],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='orden',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='certificacion.orden'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['orden', 'fecha_limite_etapa'], name='certificaci_orden_i_3ea21a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together={('orden', 'numero_item')},
        ),
    ]
